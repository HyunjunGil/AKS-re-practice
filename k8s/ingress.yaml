apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hyunjun-ingress
  namespace: hyunjun
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  ingressClassName: nginx
  rules:
  - host: your-domain.com  # 실제 도메인으로 변경하세요
    http:
      paths:
      - path: /api(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: hyunjun-backend-service
            port:
              number: 5000
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: hyunjun-frontend-service
            port:
              number: 80
---
# 로컬 테스트용으로 host 없이 설정한 버전
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hyunjun-ingress-local
  namespace: hyunjun
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /api(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: hyunjun-backend-service
            port:
              number: 5000
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: hyunjun-frontend-service
            port:
              number: 80
